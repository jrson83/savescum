import{_ as e,c as a,o as s,O as n}from"./chunks/framework.d7e37bdc.js";const f=JSON.parse('{"title":"Webinterface","description":"","frontmatter":{},"headers":[],"relativePath":"webinterface/index.md","filePath":"webinterface/index.md","lastUpdated":1683696965000}'),t={name:"webinterface/index.md"},o=n(`<h1 id="webinterface" tabindex="-1">Webinterface <a class="header-anchor" href="#webinterface" aria-label="Permalink to &quot;Webinterface&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Savescum&#39;s web interface simplifies and speeds up save scumming. It lets you store your savegame configs in the browsers <code>localStorage</code> and choose/configure either gamepad, mouse or keyboard, to trigger FTP <code>backup</code> and <code>restore</code> operations.</p><p>It can be accessed from any device within the local network, giving the advantage to execute FTP operations with a smartphones webbrowser.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>This guide assumes you&#39;ve already read the <a href="/guide/quick-start">Quick Start</a> &amp; <a href="/guide/preperation">Preperation</a> guides and installed savescum as <code>npm</code> module or use it with <code>npx</code>.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Savescum CLI is required to serve the webinterface.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">savescum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">serve</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># outputs</span></span>
<span class="line"><span style="color:#FFCB6B;">ℹ</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Running</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">serve</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">...</span></span>
<span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">listening</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">at</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://127.0.0.1:3000</span></span></code></pre></div><p>The webinterface is now running on your local system at <a href="http://127.0.0.1:3000" target="_blank" rel="noreferrer">http://127.0.0.1:3000</a>.</p></div>`,8),r=[o];function l(i,c,p,d,h,u){return s(),a("div",null,r)}const C=e(t,[["render",l]]);export{f as __pageData,C as default};
